name: Android CI

on:
  push:
    branches: [ main ] # Or your default branch
  pull_request:
    branches: [ main ] # Or your default branch

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build debug APK
        run: ./gradlew assembleDebug

      # Optional: Build the dummy extension APK if it's part of the repo & build
      # - name: Build Dummy Extension APK
      #   run: ./gradlew :extensions:dummy_success_provider:assembleDebug
      #   # Adjust path if module structure is different

      - name: Run lint check
        run: ./gradlew lintDebug

      - name: Run unit tests
        run: ./gradlew testDebugUnitTest

      # Running Android (instrumentation) tests requires an emulator
      # This setup uses a community action for emulator management.
      # It might be slow or have limitations on free tiers.
      - name: Run Android instrumentation tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30 # Choose an appropriate API level
          script: ./gradlew connectedDebugAndroidTest

      # Optional: Upload APKs as artifacts
      # - name: Upload Debug APK
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: app-debug.apk
      #     path: app/build/outputs/apk/debug/app-debug.apk
      # - name: Upload Dummy Extension APK
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: dummy-extension-debug.apk
      #     path: extensions/dummy_success_provider/build/outputs/apk/debug/dummy_success_provider-debug.apk
      #     # Adjust path
