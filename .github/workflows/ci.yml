name: Continuous Integration

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_android:
    name: Build Android App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle (Debug)
        run: ./gradlew assembleDebug

      # Optional: Upload APK artifact if needed for debug builds
      # - name: Upload Debug APK
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: app-debug.apk
      #     path: app/build/outputs/apk/debug/app-debug.apk

  run_unit_tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Run unit tests
        run: ./gradlew testDebugUnitTest # Or specific module tests like :app:testDebugUnitTest

      # Optional: Upload test results
      # - name: Upload Unit Test Results
      #   if: always() # Run this step even if tests fail
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: unit-test-results
      #     path: '**/build/reports/tests/testDebugUnitTest/'

  run_android_tests:
    name: Run Android Instrumented Tests
    runs-on: macos-latest # Android emulators run better on macOS VMs in GitHub Actions
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # Android Test Job - Requires Emulator Setup
      # This is a placeholder. A full setup involves:
      # - Caching AVD images
      # - Starting an emulator (e.g., using reactivecircus/android-emulator-runner)
      # - Waiting for emulator to boot
      # - Running connected tests
      # - Shutting down emulator
      - name: Run Android Tests (Placeholder - Emulator needed)
        run: |
          echo "Skipping Android instrumented tests in CI for now."
          echo "A full setup would involve using an action like reactivecircus/android-emulator-runner."
          # ./gradlew connectedDebugAndroidTest # This would run if an emulator is connected

      # Example using reactivecircus/android-emulator-runner (uncomment and configure if needed)
      # - name: Run Android Instrumented Tests with Emulator
      #   uses: reactivecircus/android-emulator-runner@v2
      #   with:
      #     api-level: 29 # Example API level
      #     script: ./gradlew connectedDebugAndroidTest

      # Optional: Upload Android Test Results
      # - name: Upload Android Test Results
      #   if: always()
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: android-test-results
      #     path: '**/build/reports/androidTests/connected/'
yaml
File '.github/workflows/ci.yml' created successfully.
